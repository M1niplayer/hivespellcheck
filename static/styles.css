.primary {
  color: var(--pico-primary);
}

.success {
  color: var(--pico-form-element-valid-focus-color);
}

.material-icons {
  vertical-align: middle;
}

a.material-icons:hover {
  --pico-text-decoration: none !important;
  --pico-font-weight: 700;
  font-weight: var(--pico-font-weight);
}

[role="button"]:has(> .material-icons),
[type="button"]:has(> .material-icons),
[type="reset"]:has(> .material-icons),
[type="submit"]:has(> .material-icons),
button:has(> .material-icons) {
  display: inline-flex;
  align-items: center;
  gap: 0.25em;
}

[role="button"],
[type="button"],
[type="file"]::file-selector-button,
[type="reset"],
[type="submit"],
button {
  /* a little less padding */
  --pico-form-element-spacing-vertical: 0.5rem;
  --pico-form-element-spacing-horizontal: 0.75rem;
}

article header,
article footer {
  --pico-typography-spacing-vertical: 0;
}

.header-flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* ^ baseline might be more correct, but center looks best with short text far apart */
}

.flex-end {
  display: flex;
  justify-content: end;
}

/* opposite of .htmx-indicator; hidden if a request is being sent */
.htmx-anti-indicator {
  visibility: visible;
}
.htmx-request.htmx-anti-indicator,
.htmx-request .htmx-anti-indicator {
  visibility: hidden;
  text-align: center;
}

/* Pico loading spinner in a div with no children */
div[aria-busy="true"]:not(:has(*))::before {
  visibility: visible; /* counter-act .htmx-anti-indicator, if applicable */
  font-size: 3rem;
}
div[aria-busy="true"]:not(:has(*)) {
  text-align: center;
}
